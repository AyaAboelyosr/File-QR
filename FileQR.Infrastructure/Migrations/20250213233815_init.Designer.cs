// <auto-generated />
using System;
using FileQR.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FileQR.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20250213233815_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FileQR.Domain.Entities.File", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AuthRequiredFrom")
                        .HasColumnType("int");

                    b.Property<int?>("AuthRequiredFromUserId")
                        .HasColumnType("int");

                    b.Property<float>("FirstPagePosBottom")
                        .HasColumnType("real");

                    b.Property<float>("FirstPagePosLeft")
                        .HasColumnType("real");

                    b.Property<float>("FirstPagePosWidth")
                        .HasColumnType("real");

                    b.Property<string>("IssuedFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("LastPagePosBottom")
                        .HasColumnType("real");

                    b.Property<float>("LastPagePosLeft")
                        .HasColumnType("real");

                    b.Property<float>("LastPagePosWidth")
                        .HasColumnType("real");

                    b.Property<float>("MiddlePagePosBottom")
                        .HasColumnType("real");

                    b.Property<float>("MiddlePagePosLeft")
                        .HasColumnType("real");

                    b.Property<float>("MiddlePagePosWidth")
                        .HasColumnType("real");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("QRSettingId")
                        .HasColumnType("int");

                    b.Property<bool>("ShowFirstPage")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowLastPage")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowMiddlePages")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AuthRequiredFromUserId");

                    b.HasIndex("QRSettingId");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("FileQR.Domain.Entities.QRSetting", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("MessageToShowInImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("QRBottom")
                        .HasColumnType("real");

                    b.Property<float>("QRLeft")
                        .HasColumnType("real");

                    b.Property<bool>("QRShowAuthBy")
                        .HasColumnType("bit");

                    b.Property<bool>("QRShowIssueDate")
                        .HasColumnType("bit");

                    b.Property<bool>("QRShowIssuedFor")
                        .HasColumnType("bit");

                    b.Property<bool>("QRShowLink")
                        .HasColumnType("bit");

                    b.Property<float>("QRWidth")
                        .HasColumnType("real");

                    b.Property<bool>("ShowArabicNames")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.ToTable("QRSettings");
                });

            modelBuilder.Entity("FileQR.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ArabicDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FileQR.Domain.Entities.File", b =>
                {
                    b.HasOne("FileQR.Domain.Entities.User", "AuthRequiredFromUser")
                        .WithMany()
                        .HasForeignKey("AuthRequiredFromUserId");

                    b.HasOne("FileQR.Domain.Entities.QRSetting", "QRSetting")
                        .WithMany()
                        .HasForeignKey("QRSettingId");

                    b.Navigation("AuthRequiredFromUser");

                    b.Navigation("QRSetting");
                });
#pragma warning restore 612, 618
        }
    }
}
